[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set Z = params.Z|default(10)|float %}
    {% set E = params.E|default(0.6)|float %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(0.6)|float %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    END_PRINT
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro MOVE_HOMING_POSITION]
gcode:
    G0 X200 Y200 F9000


[gcode_macro _PRINT_AR]
description: Helper: Action response 
gcode:
  # set default parameter value
  {% set show_lcd = params.SHOW_LCD|default('false') %}
  {% if show_lcd == 'true' %}
    M117 {'%s' % (params.T|string)}
  {% endif %}
  {action_respond_info("%s" % (params.T|string))}

[gcode_macro BED_MESH_LOAD]
description: Load an existing mesh or generate a new one
variable_save_at_end: 'false'
gcode:
  {% set auto = params.AUTO|default('false') %} # set that to true to enable autogeneration of a missing mesh
  {% set bed_temp = printer.heater_bed.target|int %}
  {% if printer.configfile.config["bed_mesh " + bed_temp|string + "C"] is defined %}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD={printer.heater_bed.target|int}C
    _PRINT_AR T="{"MESH: " + bed_temp|string + "C loaded"}"
  {% else %}
    {% if auto|lower == 'true' %}
      _PRINT_AR T="{"MESH: " + bed_temp|string + "C needs to be generated"}"
      _PRINT_AR T="{"MESH: Waiting 1 min for the Bed to settle at " + bed_temp|string + "C"}"
      G4 P60000 ; wait for 1 min
      BED_MESH_CLEAR
      BED_MESH_CALIBRATE
      BED_MESH_PROFILE SAVE={printer.heater_bed.target|int}C
      _PRINT_AR T="MESH: Save Config after print done"
      SET_GCODE_VARIABLE MACRO=BED_MESH_LOAD VARIABLE=save_at_end VALUE='"true"'
      MOVE_HOMING_POSITION
    {% else %}
      _PRINT_AR T="{"MESH ERROR: " + bed_temp|string + "C not defined"}"
    {% endif %}
  {% endif %}

## add this to your PRINT_END to save a mesh if needed 10 seconds after print ended
## UPDATE_DELAYED_GCODE ID=BED_MESH_SAVE DURATION=10
[delayed_gcode BED_MESH_SAVE]
gcode:
  {% if printer["gcode_macro BED_MESH_LOAD"].save_at_end == 'true'  %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% endif %}

[gcode_macro BED_MESH_SAVE]
gcode:
  UPDATE_DELAYED_GCODE ID=BED_MESH_SAVE DURATION=1

[gcode_macro SET_PA]
gcode:
  SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={params.PA|default(0, true)}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91 ;relative positioning
  M117 Heating...
  M109 S{params.TEMP|default(220, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  M117 Unloading filament...
  G0 E-5 F3600        ;extract filament to cold end area 
  G4 P3000            ;wait for three seconds
  G0 E5 F3600         ;push back the filament to smash any stringing 
  G0 E-15 F3600       ;Extract back fast in the cold zone 
  G0 E-130 F300       ;Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91 ;relative positioning
  M117 Heating...
  M109 S{params.TEMP|default(220, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  M117 Loading filament...
  G0 E100 F600 ; Load the filament into the hotend area.
  G4 P1000
  G0 E40 F100 ; Purge
  M400
  TURN_OFF_HEATERS
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro QUERY_ROOM]
gcode:
    {% set sensor = printer["htu21d room"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.humidity))}

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
gcode:
  _Z_TILT_ADJUST
  G28 Z


[gcode_macro SHAPER]
gcode:
  SHAPER_CALIBRATE

[gcode_macro TEST_RESONANCE_XY]
gcode:
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data FREQ_START=20 FREQ_END=120 HZ_PER_SEC=2
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data FREQ_START=20 FREQ_END=120 HZ_PER_SEC=2

#[gcode_macro TEST_RESONANCE_Y]
#gcode:
#  TEST_RESONANCES AXIS=Y OUTPUT=raw_data

#[gcode_macro TEST_RESONANCE_X]
#gcode:
#  TEST_RESONANCES AXIS=X OUTPUT=raw_data

[gcode_macro ACC_QUERRY]
gcode:
  ACCELEROMETER_QUERY
  
[gcode_macro ACC_NOISE]
gcode:
  MEASURE_AXES_NOISE